{"version":3,"sources":["api/wishList.ts","context/CartContext.tsx","utils/wishlistAndProduct.tsx","context/ProductContext.tsx","context/PriceContext.tsx","Header.tsx","Modal.tsx","Views/Overview/CartItems.tsx","utils/Loader.tsx","Views/Overview/PaymentResult.tsx","Views/WishList/ProductCard.tsx","Views/Overview/ProductCarousel.tsx","Views/Overview/index.tsx","Views/WishList/ProductList.tsx","Views/WishList/Navbar.tsx","Views/WishList/index.tsx","Views/Landing/UserCard.tsx","Views/Landing/Landing.tsx","Footer.tsx","App.tsx","reportWebVitals.ts","context/AppProvider.tsx","index.tsx"],"names":["patchWishlist","wishlist","a","axios","patch","wishlistId","initialCartValue","wishlists","handleProduct","handlePayment","CartContext","React","CartProvider","props","setWishlists","get","data","map","productListWithProductStatus","products","product","productId","approvalStatus","id","productList","console","log","fetchAllWishList","Provider","value","handledProduct","updatedStatus","wishListOfProduct","updateProductList","prevProduct","updatedProduct","updatedWishlist","updatedAllWishlist","prev","useCart","getProductListWithGivenStatus","listToCheck","givenStatus","mapOfApprovedProducts","countTotalProductWithGivenStatus","productWithCheckedStateList","reduce","mapObj","JSON","stringify","has","set","quantity","Map","values","count","forEach","push","initialProductContextValue","productDetailList","updateProductDetailList","getProductFromContext","ProductContext","ProductProvider","setProductDetailList","_","productDetail","useProduct","initialPriceValue","totalPrice","totalDiscount","PriceContext","PriceProvider","setTotalPrice","setTotalDiscount","currentProductDetail","price","calculateTotal","usePrice","Header","useState","totalApprovedProduct","setTotalApprovedProduct","useEffect","className","to","toFixed","Modal","children","elRef","useRef","current","div","document","createElement","modalRoot","getElementById","appendChild","removeChild","createPortal","CartItems","returnConfirmation","setReturnConfirmation","productReturnParam","setProductReturnParam","some","Fragment","index","style","backgroundImage","image","title","onClick","wishlistToUpdate","returnedProduct","Loader","PaymentResult","patchData","productStatus","length","width","height","borderRadius","src","alt","ProductCard","discount","setDiscount","setProductDetail","productFromStore","fetchProductAndCalculateDiscount","aria-label","ProductCarousel","wishListsToCheck","givenState","carouselTranslateXValue","setCarouselTranslateXValue","divRef","slideCarousel","direction","scrollWidth","offsetWidth","increase","distance","filter","transform","ref","Overview","approvedProductList","setApprovedProductList","confirm","setConfirm","pay","setPay","setPatchData","history","useHistory","toggleModal","handlePay","notPedingProduct","patchedWishlist","approveList","ProductList","Navbar","activeClassName","WishList","currentWishlistPrice","setCurrentWishlistPrice","currentDiscount","setCurrentDiscount","approvedProductCount","discountedTotalPrice","currentProductPrice","calculateWishlistPrice","UserCard","userName","discardedProductCount","pendingProductCount","Landing","userInfo","setUserInfo","userCardProps","approveCount","discardCount","pendingcount","getUserCard","userCard","Footer","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AppProviders","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.56292e93.chunk.js","sourcesContent":["import axios, { AxiosResponse } from 'axios';\nimport { WishlistWithProductStatus } from 'common/commonInterface';\n\nexport interface WishList {\n  id: number;\n  userId: number;\n  date: string;\n  products: WishListProduct[];\n}\n\nexport interface WishListProduct {\n  productId: number;\n  quantity: number;\n}\n\nexport interface ProductDetail {\n  id: number;\n  title: string;\n  price: number;\n  category: string;\n  description: string;\n  image: string;\n}\n\nexport const getWishLists = (): Promise<AxiosResponse<WishList[]>> => {\n  return axios.get('/carts?limit=5');\n};\n\nexport const getWishList = async (id: number): Promise<AxiosResponse<WishList>> => {\n  return axios.get(`/carts/${id}`);\n};\n\nexport const getProductDetail = (id: number): Promise<AxiosResponse<ProductDetail>> => {\n  return axios.get<ProductDetail>(`/products/${id}`);\n};\n\nexport const patchWishlist = async (wishlist: WishlistWithProductStatus) => {\n  // const updateData = { ...wishlist, date: new Date().toJSON().slice(0, 10).split('-').reverse().join('/') };\n  return await axios.patch(`/carts/${wishlist.wishlistId}`, wishlist);\n};\n","import * as React from 'react';\n\nimport { getWishLists } from 'api/wishList';\nimport { ApprovalStatus } from 'common/commonType';\nimport { WishlistWithProductStatus, ProductWithStatus } from 'common/commonInterface';\n\nexport interface Cart {\n  wishlists: WishlistWithProductStatus[];\n  handleProduct: (\n    product: ProductWithStatus,\n    updatedState: ApprovalStatus,\n    wishListOfProduct: WishlistWithProductStatus\n  ) => void;\n  handlePayment: () => void;\n}\n\nconst initialCartValue: Cart = {\n  wishlists: [],\n  handleProduct: () => {},\n  handlePayment: () => {},\n};\nconst CartContext = React.createContext<Cart>(initialCartValue);\nfunction CartProvider(props: any) {\n  const [wishlists, setWishlists] = React.useState<WishlistWithProductStatus[]>([]);\n\n  React.useEffect(() => {\n    const fetchAllWishList = async () => {\n      try {\n        const { data } = await getWishLists();\n\n        const wishlists: WishlistWithProductStatus[] = data.map((wishlist) => {\n          const productListWithProductStatus: ProductWithStatus[] = wishlist.products.map((product) => {\n            const productWithStatus: ProductWithStatus = {\n              productId: product.productId,\n              approvalStatus: 'pending',\n            };\n            return productWithStatus;\n          });\n\n          const wishlistWithProductStatus: WishlistWithProductStatus = {\n            wishlistId: wishlist.id,\n            productList: productListWithProductStatus,\n          };\n          return wishlistWithProductStatus;\n        });\n\n        setWishlists(wishlists);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchAllWishList();\n  }, []);\n\n  const handleProduct = (\n    handledProduct: ProductWithStatus,\n    updatedStatus: ApprovalStatus,\n    wishListOfProduct: WishlistWithProductStatus\n  ) => {\n    const updateProductList: ProductWithStatus[] = wishListOfProduct.productList.map(\n      (prevProduct: ProductWithStatus) => {\n        const updatedProduct: ProductWithStatus = { ...prevProduct, approvalStatus: updatedStatus };\n\n        return prevProduct.productId === handledProduct.productId ? updatedProduct : prevProduct;\n      }\n    );\n    const updatedWishlist: WishlistWithProductStatus = { ...wishListOfProduct, productList: updateProductList };\n    const updatedAllWishlist: WishlistWithProductStatus[] = wishlists.map((wishlist: WishlistWithProductStatus) => {\n      return wishlist.wishlistId === updatedWishlist.wishlistId ? updatedWishlist : wishlist;\n    });\n    setWishlists(updatedAllWishlist);\n  };\n\n  const handlePayment = () => {\n    // Set approvalstatus of all product to pending\n    setWishlists((prev: WishlistWithProductStatus[]) => {\n      const resetWishlists: WishlistWithProductStatus[] = prev.map((wishlist: WishlistWithProductStatus) => {\n        const productList = wishlist.productList.map((product: ProductWithStatus) => {\n          const resetStateProduct: ProductWithStatus = { ...product, approvalStatus: 'pending' };\n          return resetStateProduct;\n        });\n        return { ...wishlist, productList: productList };\n      });\n      return resetWishlists;\n    });\n  };\n\n  return (\n    <CartContext.Provider\n      value={{\n        wishlists,\n        handleProduct,\n        handlePayment,\n      }}\n      {...props}\n    />\n  );\n}\nconst useCart = () => React.useContext(CartContext);\n\nexport { CartProvider, useCart, CartContext };\n","import { ProductWithQuantityList, ProductWithStatus, WishlistWithProductStatus } from 'common/commonInterface';\nimport { ApprovalStatus } from 'common/commonType';\n\nexport const getProductListWithGivenStatus = (\n  listToCheck: WishlistWithProductStatus[],\n  givenStatus: ApprovalStatus\n) => {\n  const { productWithCheckedStateList } = countTotalProductWithGivenStatus(listToCheck, givenStatus);\n\n  const mapOfApprovedProducts = productWithCheckedStateList\n    .reduce((mapObj, product: ProductWithStatus) => {\n      const id: string = JSON.stringify([product.productId]);\n\n      !mapObj.has(id) && mapObj.set(id, { ...product, quantity: 0 });\n      mapObj.get(id).quantity++;\n\n      return mapObj;\n    }, new Map())\n    .values();\n\n  const productWithQuantityList: ProductWithQuantityList[] = [...mapOfApprovedProducts];\n  return productWithQuantityList;\n};\n\nexport const countTotalProductWithGivenStatus = (\n  listToCheck: WishlistWithProductStatus[],\n  givenStatus: ApprovalStatus\n) => {\n  let count = 0;\n\n  const productWithCheckedStateList: ProductWithStatus[] = [];\n  listToCheck.forEach((wishlist) => {\n    wishlist.productList.forEach((product) => {\n      if (product.approvalStatus === givenStatus) {\n        count++;\n        productWithCheckedStateList.push(product);\n      }\n    });\n  });\n  return { count, productWithCheckedStateList };\n};\n","import * as React from 'react';\nimport * as _ from 'lodash';\n\nimport { ProductDetail } from 'api/wishList';\n\nexport type ProductDetailList = ProductDetail[];\nexport interface ProductContextProps {\n  productDetailList: ProductDetailList;\n  updateProductDetailList: (productDetail: ProductDetail) => void;\n  getProductFromContext: (productId: number) => ProductDetail | undefined;\n}\n\nconst initialProductContextValue: ProductContextProps = {\n  productDetailList: [],\n  updateProductDetailList: () => {},\n  getProductFromContext: () => undefined,\n};\n\nconst ProductContext = React.createContext<ProductContextProps>(initialProductContextValue);\n\nfunction ProductProvider(props: any) {\n  const [productDetailList, setProductDetailList] = React.useState<ProductDetailList>([]);\n\n  const updateProductDetailList = (productDetail: ProductDetail) => {\n    setProductDetailList((prev) => [...prev, productDetail]);\n  };\n\n  const getProductFromContext = (productId: number) => {\n    return _.find(productDetailList, (product) => product.id === productId);\n  };\n\n  return (\n    <ProductContext.Provider value={{ productDetailList, getProductFromContext, updateProductDetailList }} {...props} />\n  );\n}\nconst useProduct = () => React.useContext(ProductContext);\n\nexport { ProductProvider, useProduct, ProductContext };\n","import { WishlistWithProductStatus, ProductWithQuantityList } from 'common/commonInterface';\nimport * as React from 'react';\n\nimport { getProductListWithGivenStatus } from 'utils/wishlistAndProduct';\nimport { useCart } from './CartContext';\nimport { useProduct } from './ProductContext';\n\nexport interface PriceAndDiscount {\n  totalPrice: number;\n  totalDiscount: number;\n}\n\nconst initialPriceValue: PriceAndDiscount = {\n  totalPrice: 0,\n  totalDiscount: 0,\n};\nconst PriceContext = React.createContext<PriceAndDiscount>(initialPriceValue);\nfunction PriceProvider(props: any) {\n  const [totalPrice, setTotalPrice] = React.useState<number>(0);\n  const [totalDiscount, setTotalDiscount] = React.useState<number>(0);\n\n  const { wishlists } = useCart();\n  const { getProductFromContext } = useProduct();\n\n  const calculateTotal = (wishlists: WishlistWithProductStatus[]) => {\n    let totalPrice = 0;\n    let totalDiscount = 0;\n\n    getProductListWithGivenStatus(wishlists, 'approved').forEach(({ productId, quantity }: ProductWithQuantityList) => {\n      const currentProductDetail = getProductFromContext(productId);\n      const price = currentProductDetail ? currentProductDetail.price : 0;\n      quantity > 1 ? (totalPrice += (price * quantity * (10 - quantity)) / 10) : (totalPrice += price);\n      quantity > 1 && (totalDiscount += (price * quantity * quantity) / 10);\n    });\n    return { totalPrice, totalDiscount };\n  };\n\n  React.useEffect(() => {\n    const { totalPrice, totalDiscount } = calculateTotal(wishlists);\n    setTotalPrice(totalPrice);\n    setTotalDiscount(totalDiscount);\n  }, [wishlists]);\n\n  return (\n    <PriceContext.Provider\n      value={{\n        totalPrice,\n        totalDiscount,\n      }}\n      {...props}\n    />\n  );\n}\nconst usePrice = () => React.useContext(PriceContext);\n\nexport { PriceProvider, usePrice, PriceContext };\n","import { useCart } from 'context/CartContext';\nimport { usePrice } from 'context/PriceContext';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { countTotalProductWithGivenStatus } from 'utils/wishlistAndProduct';\n\nexport const Header = () => {\n  const [totalApprovedProduct, setTotalApprovedProduct] = useState<number>(0);\n\n  const { wishlists } = useCart();\n  const { totalPrice, totalDiscount } = usePrice();\n\n  useEffect(() => {\n    const { count } = countTotalProductWithGivenStatus(wishlists, 'approved');\n    setTotalApprovedProduct(count);\n  }, [wishlists]);\n  return (\n    <header className=\"App-header\">\n      <h1>Droppe Assignment</h1>\n      <div className=\"total-text-group\">\n        <Link to=\"/\">\n          <button>Home</button>\n        </Link>\n        <span className=\"total-price\">\n          <span>Total</span>\n          <span>€{totalPrice.toFixed(2)}</span>\n        </span>\n        <span className=\"total-saving\">\n          <span>Total Saving</span>\n          <span>€{totalDiscount.toFixed(2)}</span>\n        </span>\n        <span className=\"total-approved-product\">\n          <span>🛒</span>\n          <span>{totalApprovedProduct}</span>\n        </span>\n        <Link to=\"/overview\">\n          <button className=\"view-cart\">View cart</button>\n        </Link>\n      </div>\n    </header>\n  );\n};\n","import React, { useEffect, useRef } from 'react';\nimport { createPortal } from 'react-dom';\n\nconst Modal = ({ children }: any) => {\n  const elRef = useRef<HTMLDivElement | null>(null);\n  if (!elRef.current) {\n    const div = document.createElement('div');\n    elRef.current = div;\n  }\n\n  useEffect(() => {\n    const modalRoot = document.getElementById('modal');\n    modalRoot && elRef.current && modalRoot.appendChild(elRef.current);\n\n    return () => {\n      modalRoot && elRef.current && modalRoot.removeChild(elRef.current);\n    };\n  }, []);\n\n  return createPortal(<div>{children}</div>, elRef.current);\n};\n\nexport default Modal;\n","import React, { useState } from 'react';\n\nimport { useCart } from 'context/CartContext';\nimport { usePrice } from 'context/PriceContext';\nimport Modal from 'Modal';\nimport { ApprovalStatus } from 'common/commonType';\nimport { ProductWithStatus, WishlistWithProductStatus } from 'common/commonInterface';\nimport { useProduct } from 'context/ProductContext';\n\nexport interface OverviewProductReturn {\n  wishlistToUpdate: WishlistWithProductStatus;\n  returnedProduct: ProductWithStatus;\n}\n\ninterface CartItemsProps {\n  givenStatus: ApprovalStatus;\n}\n\nexport const CartItems = ({ givenStatus }: CartItemsProps) => {\n  const [returnConfirmation, setReturnConfirmation] = useState(false);\n  const [productReturnParam, setProductReturnParam] = useState<OverviewProductReturn>();\n\n  const { totalPrice } = usePrice();\n  const { wishlists, handleProduct } = useCart();\n  const { getProductFromContext } = useProduct();\n\n  const handleConfirmReturn = () => {\n    setReturnConfirmation(false);\n    productReturnParam &&\n      handleProduct(productReturnParam.returnedProduct, 'pending', productReturnParam.wishlistToUpdate);\n  };\n\n  return (\n    <div className=\"overview-list\">\n      <span className=\"section-title\">Your cart's items:</span>\n      {totalPrice > 0\n        ? wishlists.map(({ wishlistId, productList }: WishlistWithProductStatus) => {\n            return (\n              <div className=\"child-approve-list\" key={wishlistId}>\n                <span className=\"cap-title\">{`Child ${wishlistId}:`}</span>\n                {!productList.some(({ approvalStatus }) => approvalStatus === 'approved') ? (\n                  `You haven't approved any gift for Child ${wishlistId} yet`\n                ) : (\n                  <React.Fragment>\n                    {productList.map((product: ProductWithStatus, index) => {\n                      const productDetail = getProductFromContext(product.productId);\n                      return (\n                        <React.Fragment key={index}>\n                          {productDetail && product.approvalStatus === givenStatus && (\n                            <div className=\"overview-product-card\" key={productDetail.id}>\n                              <div className=\"opc-image\">\n                                <div style={{ backgroundImage: `url(${productDetail.image})` }}></div>\n                              </div>\n                              <div className=\"opc-product-info\">\n                                <span className=\"opc-title\">{productDetail.title}</span>\n                                <span className=\"opc-price\">€{productDetail.price}</span>\n                              </div>\n                              <span\n                                className=\"opc-remove-btn\"\n                                onClick={() => {\n                                  setReturnConfirmation(true);\n                                  setProductReturnParam({\n                                    wishlistToUpdate: { productList, wishlistId },\n                                    returnedProduct: product,\n                                  });\n                                }}\n                              >\n                                ❌\n                              </span>\n                            </div>\n                          )}\n                        </React.Fragment>\n                      );\n                    })}\n                  </React.Fragment>\n                )}\n              </div>\n            );\n          })\n        : `You haven't approved any gift yet`}\n      {returnConfirmation && (\n        <Modal>\n          <div className=\"overview-return-confirmation\">\n            <p>Are you sure you want to return this gift?</p>\n            <button\n              onClick={() => {\n                handleConfirmReturn();\n              }}\n            >\n              Yes\n            </button>\n            <button\n              onClick={() => {\n                setReturnConfirmation(false);\n              }}\n            >\n              No\n            </button>\n          </div>\n        </Modal>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport './Loader.css';\n\nexport const Loader = () => {\n  return (\n    <div className=\"loader\">\n      <b>Loading</b>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { Loader } from 'utils/Loader';\nimport { ProductWithStatus, WishlistWithProductStatus } from 'common/commonInterface';\nimport { useProduct } from 'context/ProductContext';\n\nexport interface PaymentResultProps {\n  patchData: WishlistWithProductStatus[];\n  productStatus: 'approved' | 'discarded';\n}\nexport const PaymentResult = ({ patchData, productStatus }: PaymentResultProps) => {\n  const { getProductFromContext } = useProduct();\n  return (\n    <>\n      {patchData.length ? (\n        patchData.map(({ wishlistId, productList }) => {\n          return (\n            <div key={wishlistId}>\n              <h6>Child {wishlistId}</h6>\n              {productList.map((product: ProductWithStatus) => {\n                const productDetail = getProductFromContext(product.productId);\n                return (\n                  productDetail &&\n                  product.approvalStatus === productStatus && (\n                    <div key={productDetail.id} className=\"confirmation-product-card\">\n                      <h5>{productDetail.title}</h5>\n                      <img\n                        style={{ width: '50px', height: '50px', borderRadius: '20px' }}\n                        src={productDetail.image}\n                        alt={productDetail.title}\n                      />\n                      <p>Price: €{productDetail.price}</p>\n                    </div>\n                  )\n                );\n              })}\n            </div>\n          );\n        })\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\n\nimport './ProductCard.css';\nimport { getProductDetail, ProductDetail } from 'api/wishList';\nimport { useCart } from 'context/CartContext';\nimport { Loader } from 'utils/Loader';\nimport { Loading } from 'common/commonType';\nimport { ProductWithStatus, WishlistWithProductStatus } from 'common/commonInterface';\nimport { useProduct } from 'context/ProductContext';\n\nexport interface ProductCardProps {\n  product: ProductWithStatus;\n  wishlist: WishlistWithProductStatus;\n}\n\nexport const ProductCard = ({ product, wishlist }: ProductCardProps) => {\n  const [discount, setDiscount] = useState(0);\n  const [productDetail, setProductDetail] = useState<ProductDetail | Loading>('loading');\n\n  const { handleProduct, wishlists } = useCart();\n  const { getProductFromContext, updateProductDetailList } = useProduct();\n\n  useEffect(() => {\n    const fetchProductAndCalculateDiscount = async () => {\n      // Get product detail from store, if not fetch from server and update store with fetched data\n      const productFromStore = getProductFromContext(product.productId);\n      if (productFromStore) {\n        setProductDetail(productFromStore);\n      } else {\n        try {\n          const { data } = await getProductDetail(product.productId);\n          updateProductDetailList(data);\n          setProductDetail(data);\n        } catch (error) {\n          console.log(error);\n        }\n      }\n      // Calculate Possible discount\n      let count = 0;\n      wishlists &&\n        wishlists.forEach((wishlist) => {\n          wishlist.productList.forEach(({ productId }) => productId === product.productId && count++);\n        });\n      setDiscount(count > 1 ? count * 10 : 0);\n    };\n    fetchProductAndCalculateDiscount();\n  }, [wishlists]);\n\n  return (\n    <>\n      {productDetail === 'loading' && <Loader />}\n      {productDetail !== 'loading' && (\n        <div className=\"product-card\">\n          {discount > 0 && <div className={`discount-label discount--${discount}`}></div>}\n          <div className=\"product-card-img\">\n            <div style={{ backgroundImage: `url(${productDetail.image})` }}></div>\n          </div>\n\n          <div className=\"product-card-content\">\n            <span className=\"product-card-title\">{productDetail.title}</span>\n            <p className=\"price\">€{productDetail.price}</p>\n            <div className=\"product-card-btn\">\n              <a\n                className={product.approvalStatus === 'pending' ? 'primary' : 'secondary'}\n                aria-label={\n                  product.approvalStatus === 'pending'\n                    ? `approve-btn-${product.productId}`\n                    : `return-btn-${product.productId}`\n                }\n                onClick={() => {\n                  product.approvalStatus === 'pending'\n                    ? handleProduct(product, 'approved', wishlist)\n                    : handleProduct(product, 'pending', wishlist);\n                }}\n              >\n                {product.approvalStatus === 'pending' ? 'Add to cart' : 'Save to wishlist'}\n              </a>\n              <a\n                className={product.approvalStatus === 'discarded' ? 'primary' : 'secondary'}\n                aria-label={\n                  product.approvalStatus === 'discarded'\n                    ? `approve-btn-${product.productId}`\n                    : `discard-btn-${product.productId}`\n                }\n                onClick={() => {\n                  product.approvalStatus === 'discarded'\n                    ? handleProduct(product, 'approved', wishlist)\n                    : handleProduct(product, 'discarded', wishlist);\n                }}\n              >\n                {product.approvalStatus === 'discarded' ? 'Add to cart' : 'Remove'}\n              </a>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useRef, useState } from 'react';\n\nimport { usePrice } from 'context/PriceContext';\nimport { useCart } from 'context/CartContext';\nimport { ProductCard } from 'Views/WishList/ProductCard';\nimport { ApprovalStatus, Loading } from 'common/commonType';\nimport { ProductWithStatus, WishlistWithProductStatus } from 'common/commonInterface';\n\ntype CarouselDirection = 'next' | 'prev';\ninterface ProductCarouselProps {\n  givenStatus: ApprovalStatus;\n}\n\nexport const ProductCarousel = ({ givenStatus }: ProductCarouselProps) => {\n  const [carouselTranslateXValue, setCarouselTranslateXValue] = useState(0);\n\n  const { totalPrice } = usePrice();\n  const { wishlists } = useCart();\n\n  const wishlistEmptyCheck = (wishListsToCheck: WishlistWithProductStatus[], givenState: ApprovalStatus) => {\n    const checkedWishlists = wishListsToCheck.map(({ productList }: WishlistWithProductStatus) => {\n      return productList.filter((product: ProductWithStatus) => product.approvalStatus === givenState);\n    });\n    return checkedWishlists.some((a) => {\n      return a.length;\n    })\n      ? false\n      : true;\n  };\n\n  const divRef = useRef<HTMLDivElement>(null);\n  const slideCarousel = (direction: CarouselDirection) => {\n    const scrollWidth = divRef.current?.scrollWidth || 0;\n    const offsetWidth = divRef.current?.offsetWidth || 0;\n    const increase = offsetWidth / 2;\n\n    let distance = carouselTranslateXValue;\n    direction === 'next' ? (distance -= increase) : (distance += increase);\n    distance < offsetWidth - scrollWidth && (distance = offsetWidth - scrollWidth);\n    distance > 0 && (distance = 0);\n\n    setCarouselTranslateXValue(distance);\n  };\n  return (\n    <>\n      {totalPrice > 0 && (\n        <>\n          {!wishlistEmptyCheck(wishlists, givenStatus) && (\n            <div className=\"overview-pending-list\">\n              <span className=\"section-title\">These items are still in your wishlists:</span>\n              <div className=\"carousel-section\">\n                <div className=\"btn-prev\">\n                  <span\n                    onClick={() => {\n                      slideCarousel('prev');\n                    }}\n                  >\n                    «\n                  </span>\n                </div>\n                <div className=\"wl-carousel\">\n                  <div\n                    className=\"wrapper\"\n                    style={{ transform: `translateX(${carouselTranslateXValue}px)` }}\n                    ref={divRef}\n                  >\n                    {wishlists.map((wishlist: WishlistWithProductStatus, index: number) => {\n                      const isNotEmptyPending = wishlist.productList.some((product) => {\n                        return product.approvalStatus === givenStatus;\n                      });\n                      return (\n                        isNotEmptyPending && (\n                          <div key={index} className=\"opl-wrapper\">\n                            <div className=\"opl-child\">\n                              <span className=\"opl-title\">Username_{wishlist.wishlistId}</span>\n                              <div className=\"child-pending-list\">\n                                {wishlist.productList.map((product: ProductWithStatus, index) => {\n                                  return (\n                                    <React.Fragment key={index}>\n                                      {product.approvalStatus === givenStatus && (\n                                        <ProductCard product={product} wishlist={wishlist} />\n                                      )}\n                                    </React.Fragment>\n                                  );\n                                })}\n                              </div>\n                            </div>\n                          </div>\n                        )\n                      );\n                    })}\n                  </div>\n                </div>\n                <div className=\"btn-next\">\n                  <span\n                    onClick={() => {\n                      slideCarousel('next');\n                    }}\n                  >\n                    »\n                  </span>\n                </div>\n              </div>\n            </div>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { patchWishlist } from 'api/wishList';\nimport { useCart } from 'context/CartContext';\nimport { usePrice } from 'context/PriceContext';\nimport { getProductListWithGivenStatus } from 'utils/wishlistAndProduct';\nimport { CartItems } from './CartItems';\nimport { PaymentResult } from './PaymentResult';\nimport { ProductCarousel } from './ProductCarousel';\nimport Modal from '../../Modal';\nimport './Overview.css';\nimport { ProductWithQuantityList, ProductWithStatus, WishlistWithProductStatus } from 'common/commonInterface';\nimport { useProduct } from 'context/ProductContext';\n\nexport const Overview = () => {\n  const { wishlists, handlePayment } = useCart();\n  const { totalPrice, totalDiscount } = usePrice();\n  const { getProductFromContext } = useProduct();\n\n  const [approvedProductList, setApprovedProductList] = useState<ProductWithQuantityList[]>([]);\n  const [confirm, setConfirm] = useState(false);\n  const [pay, setPay] = useState(false);\n  const [patchData, setPatchData] = useState<WishlistWithProductStatus[]>([]);\n\n  const history = useHistory();\n\n  const toggleModal = () => setConfirm(!confirm);\n  const handlePay = async () => {\n    wishlists.forEach(async (wishlist: WishlistWithProductStatus) => {\n      const notPedingProduct = wishlist.productList.filter(\n        (product: ProductWithStatus) => product.approvalStatus !== 'pending'\n      );\n      if (notPedingProduct.length) {\n        const patchedWishlist: WishlistWithProductStatus = { ...wishlist, productList: notPedingProduct };\n        const { data } = await patchWishlist(patchedWishlist);\n        setPatchData((prev) => {\n          return [...prev, { ...data }];\n        });\n      }\n    });\n    setConfirm(!confirm);\n    setPay(true);\n  };\n\n  const handleAfterPaymentConfirm = () => {\n    setPay(false);\n    setPatchData([]);\n    handlePayment();\n    history.push('/');\n  };\n\n  useEffect(() => {\n    const approveList = getProductListWithGivenStatus(wishlists, 'approved');\n    setApprovedProductList(approveList);\n  }, [wishlists]);\n\n  return (\n    <div className=\"overview-container\">\n      <div className=\"main\">\n        <CartItems givenStatus=\"approved\" />\n        <ProductCarousel givenStatus=\"pending\" />\n      </div>\n\n      <div className=\"side\">\n        <div className=\"side-wrapper\">\n          <h2>Order's overall details</h2>\n          <div className=\"total-cost\">\n            Total: €<b>{totalPrice.toFixed(2)}</b>\n          </div>\n          <div className=\"total-saving\">You save: €{totalDiscount.toFixed(2)}</div>\n          {totalPrice > 0 && (\n            <button\n              className=\"checkout-btn\"\n              onClick={() => {\n                toggleModal();\n              }}\n            >\n              Checkout\n            </button>\n          )}\n        </div>\n      </div>\n\n      {confirm && (\n        <Modal>\n          <div className=\"payment-overview\">\n            <h6>\n              {approvedProductList.length ? 'You have these gifts in your cart:' : `You haven't approved any gifts yet`}\n            </h6>\n            {approvedProductList &&\n              approvedProductList.map(({ productId, quantity }: ProductWithQuantityList) => {\n                const productDetail = getProductFromContext(productId);\n                return (\n                  productDetail && (\n                    <div key={productDetail.id} className=\"confirmation-product-card\">\n                      <h5>{productDetail.title}</h5>\n                      <img\n                        style={{ width: '50px', height: '50px', borderRadius: '20px' }}\n                        src={productDetail.image}\n                        alt={productDetail.title}\n                      />\n                      <p>Quantity: {quantity}</p>\n                      <p>\n                        Total: €\n                        {quantity > 1\n                          ? ((productDetail.price * quantity * (10 - quantity)) / 10).toFixed(2)\n                          : productDetail.price.toFixed(2)}\n                      </p>\n                      {quantity > 1 && (\n                        <p>You save: €{((productDetail.price * quantity * quantity) / 10).toFixed(2)}</p>\n                      )}\n                    </div>\n                  )\n                );\n              })}\n            {approvedProductList.length && (\n              <>\n                <div className=\"total-cost\">\n                  Total: €<b>{totalPrice >= 0 ? totalPrice.toFixed(2) : '0.00'}</b>\n                </div>\n                <div className=\"total-saving\">You save: €{totalDiscount.toFixed(2)}</div>\n                <button onClick={handlePay}>Pay</button>\n                <button onClick={toggleModal}>Cancel</button>\n              </>\n            )}\n          </div>\n        </Modal>\n      )}\n\n      {pay && (\n        <Modal>\n          <div className=\"success-payment\">\n            <div className=\"payment-result-approved-list\">\n              <h4>Thank you for your purchase 🙂</h4>\n              <h5>You have successfully purchased these gifts:</h5>\n              <PaymentResult {...{ patchData, productStatus: 'approved' }} />\n            </div>\n            {getProductListWithGivenStatus(patchData, 'discarded').length ? (\n              <div className=\"payment-result-discard-list\">\n                <h5>You have discarded these:</h5>\n                {getProductListWithGivenStatus(patchData, 'discarded').map(({ productId, quantity }) => {\n                  const productDetail = getProductFromContext(productId);\n                  return (\n                    productDetail && (\n                      <div key={productDetail.id}>\n                        <h6>{productDetail.title}</h6>\n                        <img\n                          style={{ width: '50px', height: '50px', borderRadius: '20px' }}\n                          src={productDetail.image}\n                          alt={productDetail.title}\n                        />\n                        <p>Price: €{productDetail.price}</p>\n                        <p>Quantity: {quantity}</p>\n                      </div>\n                    )\n                  );\n                })}\n              </div>\n            ) : (\n              ''\n            )}\n            <button onClick={handleAfterPaymentConfirm}>OK</button>\n          </div>\n        </Modal>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { ApprovalStatus, Loading } from 'common/commonType';\nimport { ProductCard } from './ProductCard';\nimport { ProductWithStatus, WishlistWithProductStatus } from 'common/commonInterface';\n\nexport interface ProductListProps {\n  givenStatus: ApprovalStatus;\n  wishlist: WishlistWithProductStatus;\n}\n\nexport const ProductList = ({ wishlist, givenStatus }: ProductListProps) => {\n  return (\n    <div className=\"product-list\">\n      {wishlist.productList &&\n        wishlist.productList.map((product: ProductWithStatus, index: number) => {\n          return (\n            <React.Fragment key={index}>\n              {product.approvalStatus === givenStatus && <ProductCard {...{ wishlist, product }} />}\n            </React.Fragment>\n          );\n        })}\n    </div>\n  );\n};\n","import { useCart } from 'context/CartContext';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar = () => {\n  const { wishlists } = useCart();\n\n  return (\n    <div className=\"navbar\">\n      {wishlists.map((wishlist, index) => {\n        return (\n          <div key={index} className=\"navbar-list\">\n            <NavLink activeClassName=\"navbar-active\" to={`/wishlist/${wishlist.wishlistId}`}>\n              Username_{wishlist.wishlistId}\n            </NavLink>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\n\nimport './Product.css';\nimport { useCart } from 'context/CartContext';\nimport { ProductList } from './ProductList';\nimport { Navbar } from 'Views/WishList/Navbar';\nimport { ProductWithStatus, WishlistWithProductStatus } from 'common/commonInterface';\nimport { useProduct } from 'context/ProductContext';\nimport { countTotalProductWithGivenStatus } from 'utils/wishlistAndProduct';\n\nexport interface CurrentWishlistPrice {\n  discountedTotalPrice: number;\n  totalDiscount: number;\n  totalPrice: number;\n}\n\nexport const WishList = (wishlist: WishlistWithProductStatus) => {\n  const [currentWishlistPrice, setCurrentWishlistPrice] = useState<number>(0);\n  const [currentDiscount, setCurrentDiscount] = useState<number>(0);\n\n  const { wishlists } = useCart();\n  const { getProductFromContext } = useProduct();\n\n  const calculateWishlistPrice = (productList: ProductWithStatus[], approvedProductCount: number) => {\n    let discountedTotalPrice = 0;\n    let totalPrice = 0;\n\n    productList.forEach((product: ProductWithStatus) => {\n      let discount = 0;\n      if (product.approvalStatus === 'approved') {\n        const currentProductDetail = getProductFromContext(product.productId);\n        const currentProductPrice = currentProductDetail ? currentProductDetail.price : 0;\n        totalPrice += currentProductPrice;\n\n        discount =\n          approvedProductCount > 1 ? (currentProductPrice * (10 - approvedProductCount)) / 10 : currentProductPrice;\n      }\n      discountedTotalPrice += discount;\n    });\n\n    let totalDiscount = totalPrice - discountedTotalPrice;\n    const currentWishlistPrice: CurrentWishlistPrice = { discountedTotalPrice, totalDiscount, totalPrice };\n    return currentWishlistPrice;\n  };\n\n  useEffect(() => {\n    const { count } = countTotalProductWithGivenStatus(wishlists, 'approved');\n    const { totalDiscount, discountedTotalPrice } = calculateWishlistPrice(wishlist.productList, count);\n    setCurrentWishlistPrice(discountedTotalPrice);\n    setCurrentDiscount(totalDiscount);\n  }, [wishlist]);\n  return (\n    <div className=\"wishlist-container\">\n      <div className=\"side\">\n        <Navbar />\n      </div>\n      <div className=\"main\">\n        <span className=\"current-price\">\n          <p>\n            {currentWishlistPrice >= 0 && `Current Wishlist: €${currentWishlistPrice.toFixed(2)}`}{' '}\n            {currentDiscount > 0 && `You save: €${currentDiscount.toFixed(2)}`}\n          </p>\n        </span>\n        <div className=\"pending-list\">\n          <span className=\"section-title\">Wishlist</span>\n          {wishlist.productList.some(({ approvalStatus }: ProductWithStatus) => approvalStatus === 'pending') ? (\n            <ProductList wishlist={wishlist} givenStatus=\"pending\" />\n          ) : (\n            'No more gift to show'\n          )}\n        </div>\n        <div className=\"approved-list\">\n          <span className=\"section-title\">Approve List</span>\n          {wishlist.productList.some(({ approvalStatus }: ProductWithStatus) => approvalStatus === 'approved') ? (\n            <ProductList wishlist={wishlist} givenStatus=\"approved\" />\n          ) : (\n            `You haven't approved anything yet`\n          )}\n        </div>\n        <div className=\"discarded-list\">\n          <span className=\"section-title\">Discarded List</span>\n          {wishlist.productList.some(({ approvalStatus }: ProductWithStatus) => approvalStatus === 'discarded') ? (\n            <ProductList wishlist={wishlist} givenStatus=\"discarded\" />\n          ) : (\n            `You haven't discarded anything yet`\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport interface UserCardProps {\n  userName: string;\n  approvedProductCount: number;\n  discardedProductCount: number;\n  pendingProductCount: number;\n  wishlistId: number;\n}\n\nexport const UserCard = ({\n  userName,\n  approvedProductCount,\n  discardedProductCount,\n  pendingProductCount,\n  wishlistId,\n}: UserCardProps) => {\n  return (\n    <Link to={`/wishlist/${wishlistId}`}>\n      <div className=\"landing-row\">\n        <div className=\"landing-row--userInfo\">\n          <img src=\"https://randomuser.me/api/portraits/lego/8.jpg\"></img>\n          <span>{userName}</span>\n        </div>\n        <div className=\"user-card-approved-count\">\n          <p>{approvedProductCount}</p>\n        </div>\n        <div className=\"user-card-discarded-count\">\n          <p>{discardedProductCount}</p>\n        </div>\n        <div className=\"user-card-pending-count\">\n          <p>{pendingProductCount}</p>\n        </div>\n      </div>\n    </Link>\n  );\n};\n","import React, { useEffect, useState } from 'react';\n\nimport { useCart } from 'context/CartContext';\nimport { UserCard, UserCardProps } from './UserCard';\nimport { Loader } from 'utils/Loader';\nimport './Landing.css';\nimport { WishlistWithProductStatus } from 'common/commonInterface';\n\nexport const Landing = () => {\n  const [userInfo, setUserInfo] = useState<UserCardProps[]>();\n  const { wishlists } = useCart();\n\n  const getUserCard = (wishlist: WishlistWithProductStatus) => {\n    let approveCount: number = 0,\n      discardCount: number = 0,\n      pendingcount: number = 0;\n    wishlist.productList.forEach((product) => {\n      switch (product.approvalStatus) {\n        case 'approved':\n          approveCount++;\n          break;\n        case 'discarded':\n          discardCount++;\n          break;\n        case 'pending':\n          pendingcount++;\n          break;\n        default:\n          console.log('Something went wrong');\n      }\n    });\n\n    const userCardProp: UserCardProps = {\n      approvedProductCount: approveCount,\n      discardedProductCount: discardCount,\n      pendingProductCount: pendingcount,\n      userName: `username_${wishlist.wishlistId}`,\n      wishlistId: wishlist.wishlistId,\n    };\n    return userCardProp;\n  };\n\n  useEffect(() => {\n    const userCardProps: UserCardProps[] = wishlists.map((wishlist) => {\n      return getUserCard(wishlist);\n    });\n    setUserInfo(userCardProps);\n  }, [wishlists]);\n\n  return (\n    <div className=\"landing-container\">\n      <div className=\"main\">\n        <div className=\"landing-row row-header\">\n          <span>User's wishlist</span>\n          <span>Approved</span>\n          <span>Discarded</span>\n          <span>Pending</span>\n        </div>\n        {userInfo &&\n          userInfo.map((userCard, index) => {\n            return (\n              <div key={index} className={`user-card-container`}>\n                <UserCard {...userCard} />\n              </div>\n            );\n          })}\n      </div>\n      <div className=\"side\"></div>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const Footer = () => {\n  return (\n    <div className=\"footer\">\n      <span>Droppe Xmas</span>\n    </div>\n  );\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport { useCart } from 'context/CartContext';\nimport { Header } from 'Header';\nimport { Overview } from 'Views/Overview';\nimport { WishList } from 'Views/WishList';\nimport { Landing } from 'Views/Landing/Landing';\nimport { Footer } from 'Footer';\n\nfunction App() {\n  const { wishlists } = useCart();\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <div className=\"App-content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Landing />\n            </Route>\n            {wishlists &&\n              wishlists.map((wishlist, index) => {\n                return (\n                  <Route key={index} path={`/wishlist/${wishlist.wishlistId}`}>\n                    <WishList {...wishlist} />\n                  </Route>\n                );\n              })}\n            <Route path=\"/overview\">\n              <Overview />\n            </Route>\n          </Switch>\n        </div>\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as React from 'react';\n\nimport { CartProvider } from './CartContext';\nimport { PriceProvider } from './PriceContext';\nimport { ProductProvider } from './ProductContext';\n\nexport const AppProviders = ({ children }: any) => {\n  return (\n    <CartProvider>\n      <ProductProvider>\n        <PriceProvider>{children}</PriceProvider>\n      </ProductProvider>\n    </CartProvider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { AppProviders } from 'context/AppProvider';\nimport './App.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProviders>\n      <App />\n    </AppProviders>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}